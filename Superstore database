This project is worked and resolved by the data provided below:

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);


SQL Queries

-- Write a SQL query that orders the items by price.
SELECT item_id, price
FROM superstore
ORDER BY price;


-- Write your own SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count.
-- (Statistic for SUM):
SELECT SUM (price)
FROM superstore;

-- (statistic for average)
SELECT AVG (price)
FROM superstore;

-- (statistic for minimum):
SELECT MIN (price)
FROM superstore;

-- (statistic for maximum)
SELECT MAX (price)
FROM superstore;

-- (statistic for count):
SELECT COUNT (price)
FROM superstore;

-- (Task #3 Write your own SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies". NOTE: The values in the categories column are called text strings, and text strings are case sensitive. That means if you want to select "Kitchen Supplies", you will need to type it exactly as it appears in the data, i.e., with a capital "K" and a capital "S".)

-- Statistics for SUM in the category of Kitchen Supplies
SELECT SUM (price), category
FROM superstore
WHERE category = 'Kitchen Supplies';

-- Statistics for average in the category of Kitchen Supplies
SELECT AVG (price), category
FROM superstore
WHERE category = 'Kitchen Supplies';

-- Statistics for minimum in the category of Kitchen Supplies
SELECT MIN (price), category
FROM superstore
WHERE category = 'Kitchen Supplies';

-- Statistics for maximum in the category of Kitchen Supplies
SELECT MAX (price), category
FROM superstore
WHERE category = 'Kitchen Supplies';

-- Statistics for count in the category of Kitchen Supplies
SELECT COUNT (price), category
FROM superstore
WHERE category = 'Kitchen Supplies';

-- Task #4 Come up with your own question about the data and try to answer it using SQL. For example: How many air purifiers are in stock? It's okay if you can't figure out how to answer your question, the idea here is to practice thinking about what kinds of insights you can get from a dataset from asking questions about it.

-- My Question: What is the price, the stock quantity and average rating of a Smart LED TV?

-- Smart LED TV price:
SELECT (price), item_name
FROM superstore
WHERE item_name = 'Smart LED TV';

-- Smart LED TV stock quantity:
SELECT (stock_quantity), item_name
FROM superstore
WHERE item_name = 'Smart LED TV';

-- Smart LED TV average rating:
SELECT (average_rating), item_name
FROM superstore
WHERE item_name = 'Smart LED TV';

